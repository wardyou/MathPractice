线程池原理：对线程的创建和销毁进行管理，最大化的进行资源的合理调度。
newFixedThreadPool：创建固定数量的线程的线程池，可以控制最大并发数，常用于知道具体任务的数量，需要进行多线程的操作，
                    如批量插入数据库任务，需要进行10万条数据分页，每1万条数据一页，配置一个线程处理，一共配置10个线程，
                    进行并行批量插入，就可以使用这个线程池来进行，大大减少响应时间。
newCachedThreadPool: 创建可一段时间内重复利用的线程池，常用于不知道具体的任务数量，但是还需要进行并行处理的情况，
                    如springboot @Aysnc就可以指定使用这个线程池，来进行一些埋点等的各种业务的异步处理。
ewSingleThreadExecutor: 创建单个线程的线程池，这个线程池可以在线程死后（或发生异常时）重新启动一个线程来替代原来的线程继续执行下去！
 newScheduledThreadPool: 创建一个可以定时和重复执行的线程池，常用于定时任务和延时任务的执行线程池

